<?phpclass emarket_custom extends def_module {	public function toggleCompareList($id,$reload=false) {		$retArr["response"] = array();		$h = umiHierarchy::getInstance();		$elt = $h->getElement($id);		if (is_object($elt) && $elt->getTypeId() == 49) {			$object_type_id = $elt->getObjectTypeId();			$elt_id = $elt->getId();			$chkItem = self::checkIsInCompareList($object_type_id, $elt_id);			if ($chkItem["result"]) {				$key = array_search($elt_id, $_SESSION['custom_compare'][$object_type_id]);				unset($_SESSION['custom_compare'][$object_type_id][$key]);				if(count($_SESSION['custom_compare'][$object_type_id]) == 0) unset($_SESSION['custom_compare'][$object_type_id]);				session_commit();				$retArr["response"] = 'unchecked';			} else {				$_SESSION['custom_compare'][$object_type_id][] = $elt_id;				session_commit();				$retArr["response"] ='checked';			}		}		if($reload)		{			$typeComp = getRequest("product_type");			def_module::redirect('/compare/?product_type='.$object_type_id);		}					return $retArr;	}	public function clearCompareTable($id) {		if (isset($_SESSION['custom_compare'][$id])) {			unset($_SESSION['custom_compare'][$id]);		}		def_module::redirect('/compare/');	}	public function printCompareTable() {		$retArr["total"]="0";		$result = '';		$typeComp = getRequest("product_type");		if(!$typeComp)		{			def_module::redirect('/');		}		if (isset($_SESSION['custom_compare'])) {			$compare = $_SESSION['custom_compare'];			if(isset($compare[$typeComp]))			{				$retArr["total"] = count($compare[$typeComp]);				$retArr["items"]["nodes:item"] = $compare[$typeComp];				$retArr["items_html"] =self::getCompareContent($compare[$typeComp],$typeComp);				$retArr["type"] = $typeComp;			}		}		return $retArr;	}	public function getCompareContent($itemsArr,$typeId)	{		$retStr = "";		$h = umiHierarchy::getInstance();		$oc = umiObjectsCollection::getInstance();		$ot = umiObjectTypesCollection::getInstance()->getType($typeId);		$group = $ot->getFieldsGroupByName('uniq_property')->getFields();		foreach($group as $field)		{			$retStr.='<tr><td><b>'.$field->getTitle().'</b></td>';			$propName= $field->getName();			foreach($itemsArr as $item)			{				$curr = $h->getElement($item);									if($curr instanceof umiHierarchyElement)				{					$val = $curr->getValue($propName);					if($field->getFieldTypeId() == 10 || $field->getFieldTypeId() == 11) {						if(is_array($val)) {							$_val = null;							foreach($val as $subval) {								$obj = $oc->getObject($subval);								if(is_object($obj)) {									$_val .= $obj->getName().', ';								}							}							$_val = substr($_val,0,-2);							$val = $_val;						} else {							$obj = $oc->getObject($val);							if(is_object($obj)) {								$val = $obj->getName();							}						}					}										$retStr.='<td>'.$val.'</td>';				}			}			$retStr.='</tr>';		}		return $retStr;	}	public function checkIsInCompareList($object_type_id, $elt_id) {		$retArr["result"] = 0;		if (isset($_SESSION['custom_compare'][$object_type_id]) && in_array($elt_id, @$_SESSION['custom_compare'][$object_type_id])) {			$retArr["result"] = 1;		}		return $retArr;	}	//	public function customPurchasing(){
		$order = $this->getBasketOrder(false);
		//сохранение регистрационных данных
		$cmsController = cmsController::getInstance();
		$data = $cmsController->getModule('data');
		$data->saveEditedObject(customer::get()->id, false, true);
		$delivery_id = getRequest('delivery_id');				if($delivery_id == 1198) {			$storeId = getRequest("store_id");			if($storeId)			{				$order->setValue("store",$storeId);			}		} else {			$order->setValue('order_time',getRequest('order_time'));			$order->setValue('order_comment',getRequest('order_comment'));		}				$order->setValue('delivery_id',$delivery_id);
		$order->refresh();		

		$order->order();
		$this->redirect("/order_success/");
	}		public function deliveryList() {        $order = $this->getBasketOrder();        $deliveryIds = delivery::getList();        $items_arr = array();        $currentDeliveryId = $order->getValue('delivery_id');        foreach ($deliveryIds as $deliveryId) {            $deliveryObject = umiObjectsCollection::getInstance()->getObject($deliveryId->id);            $item_arr = array(                'attribute:id' => $deliveryObject->id,                'attribute:name' => $deliveryObject->name,            );            if ($deliveryId == $currentDeliveryId) {                $item_arr['attribute:active'] = 'active';            }            $items_arr[] = $item_arr;        }        return array('items' => array('nodes:item' => $items_arr));    }}?>